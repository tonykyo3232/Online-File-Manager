package ofm;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping(value = "/file")
public class FileController {
	private final Logger logger = LoggerFactory.getLogger(getClass());

	private FileRepository fileRepository;
	private FolderRepository folderRepository;

	public FileController(FileRepository entry_fileRepository, FolderRepository folderRepository) {
		this.fileRepository = fileRepository;
		this.folderRepository = folderRepository;
	}
	
//	public FileController(FileRepository userRepository) {
//		this.fileRepository = userRepository;
//	}
//	
//
//	public FileController(FolderRepository userRepository) {
//		this.folderRepository = userRepository;
//	}
	
	// dummy method for testing the connection
	@RequestMapping(value = "/hello", method = RequestMethod.GET)
	public String greetings() {
		logger.info("Greetings!");
		return "Hello! from FileController!";
	}
	
	@GetMapping
	@ResponseStatus(HttpStatus.ACCEPTED)
	public List<FileModel> getAllFiles() {
		logger.info("Getting all files.");
		return fileRepository.findAll();
	}

	@GetMapping("/{id}")
	@ResponseStatus(HttpStatus.ACCEPTED)
	public FileModel getFile(@PathVariable long id) {
		logger.info("Getting file with ID: {}.", id);
		Optional<FileModel> fileModel = fileRepository.findById(id);
		return fileModel.get();
	}
	
	@GetMapping("/{id}/parent")
	@ResponseStatus(HttpStatus.ACCEPTED)
	public FolderModel getBelongFolder(@PathVariable long id) {
		logger.info("Getting this file's belong folders with ID: {}.", id);
		Optional<FileModel> file = fileRepository.findById(id);
		System.out.println("Parentid: " + file.get().getBelFolderId());
		Optional<FolderModel> belongFolder = folderRepository.findById(file.get().getBelFolderId());
		return belongFolder.get();
	}
	
	@PostMapping("/create")
	@ResponseStatus(HttpStatus.CREATED)
	public FileModel UploadFile(@RequestBody FileModel file) {
		logger.info("Upload files.");
		return fileRepository.save(file);
	}
	
	/* Original Copy
	@RequestMapping(value = "", method = RequestMethod.GET)
	public List<FileModel> getAllUsers() {
		logger.info("Getting all files.");
		return fileRepository.findAll();
	}

	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public FileModel getFile(@PathVariable long id) {
		logger.info("Getting files with ID: {}.", id);
		Optional<FileModel> fileModel = fileRepository.findById(id);
		return fileModel.get();
	}

	@RequestMapping(value = "/create", method = RequestMethod.POST)
	public FileModel addFile(@RequestBody FileModel fileModel) {
		logger.info("Saving files.");
		return fileRepository.save(fileModel);
	}
	
	@RequestMapping(value = "{id}", method = RequestMethod.DELETE)
	public void deleteFile(@PathVariable Long id) {
		FileModel model = fileRepository.findById(id).get();
		logger.info("Deleting files.");
		fileRepository.delete(model);
	}
	*/
}