package ofm.controllers;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import ofm.UserRepository;

@CrossOrigin
@RestController
@RequestMapping("/user")
public class UserController {
	private final Logger logger = LoggerFactory.getLogger(getClass());
	
	@Autowired
	private UserRepository userRepository;
	
	public UserController(UserRepository entry_userRepository) {
		this.userRepository = entry_userRepository;

	}
	
	// this router method only for testing whether that database contains user's data
	// will be deleted or hidden for future for security purpose
	@GetMapping("/all")
	@ResponseStatus(HttpStatus.ACCEPTED)
	public List<UserModel> getAllUsers() {
		logger.info("Getting all users.");
		return userRepository.findAll();
	}
	
	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	public UserModel CreateUser(@RequestBody UserModel user) {
		logger.info("Creating new user.");
		userRepository.save(user);
		return user;
	}
	
	// delete the user
	@DeleteMapping("/{id}")
	@ResponseStatus(HttpStatus.NO_CONTENT)
	public void deleteUser(@PathVariable String id) {
		logger.info("Deleting folders.");
		UserModel user = userRepository.findById(id).get();
		userRepository.delete(user);
	}
	
}